#ifndef __CCE_GET_OPFORMAT_H__
#define __CCE_GET_OPFORMAT_H__

#include "dnn_base_def.hpp"

#define PARAM_MAX_NUM   10
#define FORMAT_MAX_NUM  5

using cce::CC_TENSOR_NC1HWC0;
using cce::CC_TENSOR_ND;
using cce::CC_TENSOR_NHWC;
using cce::CC_TENSOR_NCHW;

typedef struct tagCcOperatorFormat
{
    const char* opName;

    /* true:  when format of all input params and output params is same */
    /* false: when format of input params and output params is different */
    bool isParamFormatSame;

    uint32_t supportFormatNum;

    /* For format of input param and output param is same */
    cce::ccTensorFormat_t FormatArray[FORMAT_MAX_NUM];

    /* For format of input param and output param is different */
    uint32_t inputNum;
    uint32_t outputNum;
    cce::ccTensorFormat_t dFormatArray[FORMAT_MAX_NUM][PARAM_MAX_NUM];

} ccOpFormat_t;

static ccOpFormat_t ccOpSupportedFormatArray[] = {
    {"Stack",           true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    {"Permute",         true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    {"StridedSlice",    true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    {"Slice",           true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    {"GatherNd",        true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    {"Tile",            true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    {"RealDiv",         true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },

    {"ArgMax",          true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    {"Yolo2Reorg",      true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    {"Gather",          true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    {"Split",           true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    {"SplitV",          true, 3, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND,CC_TENSOR_ND }, 0, 0,{} },
    {"Power",           true, 1, {CC_TENSOR_NC1HWC0}, 0, 0,{} },
    {"Exp",             true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    {"Log",             true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    {"Pow",             true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    {"Fill",            true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    {"Cast",            true, 3, {CC_TENSOR_NCHW, CC_TENSOR_NHWC, CC_TENSOR_ND}, 0, 0,{} },

    {"Round",           true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    {"Rint",            true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    {"Sqrt",            true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    {"Floor",           true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    {"Ceil",            true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    {"FloorDiv",        true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    {"FloorMod",        true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    {"TruncateMod",     true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    {"Maximum",         true, 2, {CC_TENSOR_ND, CC_TENSOR_NC1HWC0}, 0, 0,{} },
    { "Minimum",         true, 2, {CC_TENSOR_ND, CC_TENSOR_NC1HWC0}, 0, 0,{} },
    {"Greater",         true, 2, {CC_TENSOR_ND, CC_TENSOR_NC1HWC0}, 0, 0,{} },
    { "Less",            true, 2, {CC_TENSOR_ND, CC_TENSOR_NC1HWC0}, 0, 0,{} },
    { "LessEqual",       true, 1, {CC_TENSOR_NC1HWC0}, 0, 0,{} },
    { "GreaterEqual",    true, 1, {CC_TENSOR_NC1HWC0}, 0, 0,{} },
    { "NotEqual",        true, 1, {CC_TENSOR_NC1HWC0}, 0, 0,{} },
    {"Where",           true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    {"Select",          true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    {"ReduceSum",       true, 2, {CC_TENSOR_ND, CC_TENSOR_NC1HWC0}, 0, 0,{} },
    { "ReduceMax",       true, 2, {CC_TENSOR_ND, CC_TENSOR_NC1HWC0}, 0, 0,{} },
    { "ReduceMin",       true, 1, {CC_TENSOR_NC1HWC0}, 0, 0,{} },
    {"ReduceMean",      true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    {"ReduceProd",      true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    {"ReduceAll",       true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    //{"ResizeBilinear",  true, 2, {CC_TENSOR_NCHW, CC_TENSOR_NHWC}, 0, 0,{} },
    // ResizeBilinear be adapt to SpatialTransform in fmk
    {"ResizeBilinear",  true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    {"CropAndResize",   false,2, {}, 3, 1, {{CC_TENSOR_NCHW, CC_TENSOR_ND, CC_TENSOR_ND, CC_TENSOR_NCHW}, {CC_TENSOR_NHWC, CC_TENSOR_ND, CC_TENSOR_ND, CC_TENSOR_NHWC}}},
    {"SPP",             true, 1, {CC_TENSOR_NC1HWC0}, 0, 0,{} },
    {"MVN",             true, 1, {CC_TENSOR_NC1HWC0}, 0, 0,{} },
    {"BNLL",            true, 1, {CC_TENSOR_NC1HWC0}, 0, 0,{} },
    {"Interp",          true, 1, {CC_TENSOR_NC1HWC0}, 0, 0,{} },
    {"Swish",           true, 1, {CC_TENSOR_NC1HWC0}, 0, 0,{} },
    {"Bias",            true, 1, {CC_TENSOR_NC1HWC0}, 0, 0,{} },
    {"Heatmap2coord",   true, 1, {CC_TENSOR_NC1HWC0}, 0, 0,{} },
    {"ShuffleChannel",  true, 1, {CC_TENSOR_NC1HWC0}, 0, 0,{} },
    {"Threshold",       true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    {"Reverse",         true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    {"Concat",          true, 4, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND, CC_TENSOR_NCHW, CC_TENSOR_NHWC}, 0, 0,{} },
    { "LogicalNot",     true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    { "Equal",          true, 2, {CC_TENSOR_ND, CC_TENSOR_NC1HWC0}, 0, 0,{} },
    { "Compare",        true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "LogicalAnd",     true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    { "LogicalOr",      true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    { "LogicalXor",     true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{}},
    { "FakeQuantWithMinMaxVars", true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    { "LayerNorm",            true, 1,{ CC_TENSOR_NC1HWC0 }, 0, 0,{} },
    { "NonMaxSuppression",     true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    { "TopKV2",                true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    { "InvertPermutation",     true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    { "UnsortedSegmentSum",    true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    { "EmbeddingLookup",       true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    { "Multinomial",           true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    { "ReverseSequence",       true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    { "ReduceAsum",            true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    { "ReduceSumq",            true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    {"BatchToSpaceND",         true, 1, {CC_TENSOR_NC1HWC0}, 0, 0,{} },
    {"SpaceToBatchND",         true, 1, {CC_TENSOR_NC1HWC0}, 0, 0,{} },
    {"ResizeNearestNeighbor",  true, 1, {CC_TENSOR_NC1HWC0}, 0, 0,{} },
    { "Onehot",                true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    { "MinMultiTensor",        true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    { "MaxMultiTensor",        true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    { "RandomShuffle",         true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    { "Unpack",                true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    { "Pad",                   true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    { "PadV2",                 true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    { "MirrorPad",             true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    { "Sin",                   true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    { "Cos",                   true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    { "Tan",                   true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    { "RandomNormal",          true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    { "RandomUniform",         true, 1, {CC_TENSOR_ND}, 0, 0,{} },
    { "LogicalOr",             true, 1, {CC_TENSOR_ND}, 0, 0,{} },

    { "Convolution",          true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "Correlation",          true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "Deconvolution",        true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "Pooling",              true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "Eltwise",              true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "ReLU",                 true, 2,{ CC_TENSOR_NC1HWC0, CC_TENSOR_ND } , 0, 0,{} },
    { "ReLU6",                true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "Sigmoid",              true, 2,{ CC_TENSOR_NC1HWC0, CC_TENSOR_ND } , 0, 0,{} },
    { "Linear",               true, 2,{ CC_TENSOR_NC1HWC0, CC_TENSOR_ND } , 0, 0,{} },
    { "Clip",                 true, 2,{ CC_TENSOR_NC1HWC0, CC_TENSOR_ND } , 0, 0,{} },
    { "Elu",                  true, 2,{ CC_TENSOR_NC1HWC0, CC_TENSOR_ND } , 0, 0,{} },
    { "HardSigmoid",          true, 2,{ CC_TENSOR_NC1HWC0, CC_TENSOR_ND } , 0, 0,{} },
    { "Selu",                 true, 2,{ CC_TENSOR_NC1HWC0, CC_TENSOR_ND } , 0, 0,{} },
    { "ThresholdedReLU",      true, 2,{ CC_TENSOR_NC1HWC0, CC_TENSOR_ND } , 0, 0,{} },
    { "Reciprocal",           true, 2,{ CC_TENSOR_NC1HWC0, CC_TENSOR_ND } , 0, 0,{} },
    { "ArcSinCos",            true, 2,{ CC_TENSOR_NC1HWC0, CC_TENSOR_ND } , 0, 0,{} },
    { "Acosh",                true, 2,{ CC_TENSOR_NC1HWC0, CC_TENSOR_ND } , 0, 0,{} },
    { "Asinh",                true, 2,{ CC_TENSOR_NC1HWC0, CC_TENSOR_ND } , 0, 0,{} },
    { "Atanh",                true, 2,{ CC_TENSOR_NC1HWC0, CC_TENSOR_ND } , 0, 0,{} },
    { "Cosh",                 true, 2,{ CC_TENSOR_NC1HWC0, CC_TENSOR_ND } , 0, 0,{} },
    { "Sinh",                 true, 2,{ CC_TENSOR_NC1HWC0, CC_TENSOR_ND } , 0, 0,{} },
    { "Asin",                 true, 2,{ CC_TENSOR_NC1HWC0, CC_TENSOR_ND } , 0, 0,{} },
    { "Atan",                 true, 2,{ CC_TENSOR_NC1HWC0, CC_TENSOR_ND } , 0, 0,{} },
    { "Acos",                 true, 2,{ CC_TENSOR_NC1HWC0, CC_TENSOR_ND } , 0, 0,{} },
    { "AssignOp",             true, 2,{ CC_TENSOR_NC1HWC0, CC_TENSOR_ND } , 0, 0,{} },
    { "Neg",                  true, 2,{ CC_TENSOR_NC1HWC0, CC_TENSOR_ND } , 0, 0,{} },
    { "SquaredDifference",    true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "AbsVal",               true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "TanH",                 true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "PReLU",                true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "BatchNorm",            true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "FusionBatchNorm",      true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "InstanceNorm",         true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "Scale",                true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "FullConnection",       true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "Softmax",              true, 2,{ CC_TENSOR_NC1HWC0, CC_TENSOR_ND } , 0, 0,{} },
    { "Plus",                 true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "Activation",           true, 2,{ CC_TENSOR_NC1HWC0, CC_TENSOR_ND } , 0, 0,{} },
    { "Flatten",              true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "Add",                  true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "Sub",                  true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "Mul",                  true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "AddLimited",           true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "MulLimited",           true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "MatMul",               true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "Rsqrt",                true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "BiasAdd",              true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "Reshape",              true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "ConvolutionDepthwise", true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "ROIPooling",           true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "Proposal",             true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "FsrDetectionOutput",   true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "Detectpostprocess",    true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "LRN",                  true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "SsdNormalize",         true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "SsdPriorBox",          true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "SsdDetectionOutput",   true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "ChannelAxpy",          true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "PSROIPooling",         true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "Power",                true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "ROIAlign",             true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "FreespaceExtract",     true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "SpatialTransform",     true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "GenerateRpnProposals", true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "DecodeBBox",           true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "Clipboxes",            true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "FastrcnnPredictions",  true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "Region",               true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "Yolo",                 true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "YoloDetectionOutput",  true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "Retina_PostProcessor", true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "Ssd_PostProcessor",    true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "RoiInterpPooling",     true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "AttentionDecoder",     true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "HighWay",              true, 1,{ CC_TENSOR_ND } , 0, 0,{} },
    { "RNN",                  true, 2,{ CC_TENSOR_NC1HWC0, CC_TENSOR_ND } , 0, 0,{} },
    { "GetSpan",              true, 1,{ CC_TENSOR_ND } , 0, 0,{} },
    { "Square",               true, 1,{ CC_TENSOR_NC1HWC0 } , 0, 0,{} },
    { "FloorCore",            true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    { "CommDequantize",       true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    { "CommQuantize",         true, 2, {CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    { "L2Normalize",          true, 1,{ CC_TENSOR_NC1HWC0 }, 0, 0,{} },
    { "Cum",                  true, 1, { CC_TENSOR_ND }, 0, 0,{} },
    { "ExtractImagePatches",  true, 1, { CC_TENSOR_NHWC }, 0, 0,{} },
    { "ReduceMax",            true, 1, { CC_TENSOR_ND }, 0, 0,{} },
    { "Expm1",                true, 1, { CC_TENSOR_ND }, 0, 0,{} },
    { "Log1p",                true, 1, { CC_TENSOR_ND }, 0, 0,{} },
    { "FractionalPooling",    true, 1, { CC_TENSOR_NHWC }, 0, 0,{} },
    { "Upsample",             true, 1, { CC_TENSOR_NC1HWC0 }, 0, 0,{} },
    { "SpaceToDepth",         true, 1, { CC_TENSOR_NHWC }, 0, 0,{} },
    { "DepthToSpace",         true, 1, { CC_TENSOR_NHWC }, 0, 0,{} },
    { "ArgMin",               true, 1, { CC_TENSOR_ND }, 0, 0,{} },
    { "LSHProjection",        true, 1, { CC_TENSOR_ND }, 0, 0,{} },
    { "ShapeClassify",        true, 2, { CC_TENSOR_NC1HWC0, CC_TENSOR_ND}, 0, 0,{} },
    { "FasterRCNNSecondStagePostprocessor",true, 1, { CC_TENSOR_NC1HWC0 }, 0, 0,{} },
    { "FasterRCNNFirstStagePostprocessor",true, 1, { CC_TENSOR_NC1HWC0 }, 0, 0,{} },
    { "FasterRCNNROIInterPooling",true, 1, { CC_TENSOR_NC1HWC0 }, 0, 0,{} },
    { "FasterRCNNGridAnchorGenerator",true, 1, { CC_TENSOR_NC1HWC0 }, 0, 0,{} },
};


#endif /* __CCE_GET_OPFORMAT_H__ */
